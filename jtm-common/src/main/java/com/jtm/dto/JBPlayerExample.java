package com.jtm.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class JBPlayerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public JBPlayerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPlayeridIsNull() {
            addCriterion("Playerid is null");
            return (Criteria) this;
        }

        public Criteria andPlayeridIsNotNull() {
            addCriterion("Playerid is not null");
            return (Criteria) this;
        }

        public Criteria andPlayeridEqualTo(Integer value) {
            addCriterion("Playerid =", value, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayeridNotEqualTo(Integer value) {
            addCriterion("Playerid <>", value, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayeridGreaterThan(Integer value) {
            addCriterion("Playerid >", value, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayeridGreaterThanOrEqualTo(Integer value) {
            addCriterion("Playerid >=", value, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayeridLessThan(Integer value) {
            addCriterion("Playerid <", value, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayeridLessThanOrEqualTo(Integer value) {
            addCriterion("Playerid <=", value, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayeridIn(List<Integer> values) {
            addCriterion("Playerid in", values, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayeridNotIn(List<Integer> values) {
            addCriterion("Playerid not in", values, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayeridBetween(Integer value1, Integer value2) {
            addCriterion("Playerid between", value1, value2, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayeridNotBetween(Integer value1, Integer value2) {
            addCriterion("Playerid not between", value1, value2, "playerid");
            return (Criteria) this;
        }

        public Criteria andPlayernameIsNull() {
            addCriterion("Playername is null");
            return (Criteria) this;
        }

        public Criteria andPlayernameIsNotNull() {
            addCriterion("Playername is not null");
            return (Criteria) this;
        }

        public Criteria andPlayernameEqualTo(String value) {
            addCriterion("Playername =", value, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameNotEqualTo(String value) {
            addCriterion("Playername <>", value, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameGreaterThan(String value) {
            addCriterion("Playername >", value, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameGreaterThanOrEqualTo(String value) {
            addCriterion("Playername >=", value, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameLessThan(String value) {
            addCriterion("Playername <", value, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameLessThanOrEqualTo(String value) {
            addCriterion("Playername <=", value, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameLike(String value) {
            addCriterion("Playername like", value, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameNotLike(String value) {
            addCriterion("Playername not like", value, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameIn(List<String> values) {
            addCriterion("Playername in", values, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameNotIn(List<String> values) {
            addCriterion("Playername not in", values, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameBetween(String value1, String value2) {
            addCriterion("Playername between", value1, value2, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayernameNotBetween(String value1, String value2) {
            addCriterion("Playername not between", value1, value2, "playername");
            return (Criteria) this;
        }

        public Criteria andPlayersexIsNull() {
            addCriterion("Playersex is null");
            return (Criteria) this;
        }

        public Criteria andPlayersexIsNotNull() {
            addCriterion("Playersex is not null");
            return (Criteria) this;
        }

        public Criteria andPlayersexEqualTo(String value) {
            addCriterion("Playersex =", value, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexNotEqualTo(String value) {
            addCriterion("Playersex <>", value, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexGreaterThan(String value) {
            addCriterion("Playersex >", value, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexGreaterThanOrEqualTo(String value) {
            addCriterion("Playersex >=", value, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexLessThan(String value) {
            addCriterion("Playersex <", value, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexLessThanOrEqualTo(String value) {
            addCriterion("Playersex <=", value, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexLike(String value) {
            addCriterion("Playersex like", value, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexNotLike(String value) {
            addCriterion("Playersex not like", value, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexIn(List<String> values) {
            addCriterion("Playersex in", values, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexNotIn(List<String> values) {
            addCriterion("Playersex not in", values, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexBetween(String value1, String value2) {
            addCriterion("Playersex between", value1, value2, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayersexNotBetween(String value1, String value2) {
            addCriterion("Playersex not between", value1, value2, "playersex");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayIsNull() {
            addCriterion("Playerbirthday is null");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayIsNotNull() {
            addCriterion("Playerbirthday is not null");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayEqualTo(Date value) {
            addCriterionForJDBCDate("Playerbirthday =", value, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate("Playerbirthday <>", value, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayGreaterThan(Date value) {
            addCriterionForJDBCDate("Playerbirthday >", value, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("Playerbirthday >=", value, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayLessThan(Date value) {
            addCriterionForJDBCDate("Playerbirthday <", value, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("Playerbirthday <=", value, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayIn(List<Date> values) {
            addCriterionForJDBCDate("Playerbirthday in", values, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayNotIn(List<Date> values) {
            addCriterionForJDBCDate("Playerbirthday not in", values, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("Playerbirthday between", value1, value2, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andPlayerbirthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("Playerbirthday not between", value1, value2, "playerbirthday");
            return (Criteria) this;
        }

        public Criteria andEntrytimeIsNull() {
            addCriterion("Entrytime is null");
            return (Criteria) this;
        }

        public Criteria andEntrytimeIsNotNull() {
            addCriterion("Entrytime is not null");
            return (Criteria) this;
        }

        public Criteria andEntrytimeEqualTo(String value) {
            addCriterion("Entrytime =", value, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeNotEqualTo(String value) {
            addCriterion("Entrytime <>", value, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeGreaterThan(String value) {
            addCriterion("Entrytime >", value, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeGreaterThanOrEqualTo(String value) {
            addCriterion("Entrytime >=", value, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeLessThan(String value) {
            addCriterion("Entrytime <", value, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeLessThanOrEqualTo(String value) {
            addCriterion("Entrytime <=", value, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeLike(String value) {
            addCriterion("Entrytime like", value, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeNotLike(String value) {
            addCriterion("Entrytime not like", value, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeIn(List<String> values) {
            addCriterion("Entrytime in", values, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeNotIn(List<String> values) {
            addCriterion("Entrytime not in", values, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeBetween(String value1, String value2) {
            addCriterion("Entrytime between", value1, value2, "entrytime");
            return (Criteria) this;
        }

        public Criteria andEntrytimeNotBetween(String value1, String value2) {
            addCriterion("Entrytime not between", value1, value2, "entrytime");
            return (Criteria) this;
        }

        public Criteria andWorkflagIsNull() {
            addCriterion("Workflag is null");
            return (Criteria) this;
        }

        public Criteria andWorkflagIsNotNull() {
            addCriterion("Workflag is not null");
            return (Criteria) this;
        }

        public Criteria andWorkflagEqualTo(String value) {
            addCriterion("Workflag =", value, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagNotEqualTo(String value) {
            addCriterion("Workflag <>", value, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagGreaterThan(String value) {
            addCriterion("Workflag >", value, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagGreaterThanOrEqualTo(String value) {
            addCriterion("Workflag >=", value, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagLessThan(String value) {
            addCriterion("Workflag <", value, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagLessThanOrEqualTo(String value) {
            addCriterion("Workflag <=", value, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagLike(String value) {
            addCriterion("Workflag like", value, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagNotLike(String value) {
            addCriterion("Workflag not like", value, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagIn(List<String> values) {
            addCriterion("Workflag in", values, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagNotIn(List<String> values) {
            addCriterion("Workflag not in", values, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagBetween(String value1, String value2) {
            addCriterion("Workflag between", value1, value2, "workflag");
            return (Criteria) this;
        }

        public Criteria andWorkflagNotBetween(String value1, String value2) {
            addCriterion("Workflag not between", value1, value2, "workflag");
            return (Criteria) this;
        }

        public Criteria andQuittimeIsNull() {
            addCriterion("quittime is null");
            return (Criteria) this;
        }

        public Criteria andQuittimeIsNotNull() {
            addCriterion("quittime is not null");
            return (Criteria) this;
        }

        public Criteria andQuittimeEqualTo(Date value) {
            addCriterion("quittime =", value, "quittime");
            return (Criteria) this;
        }

        public Criteria andQuittimeNotEqualTo(Date value) {
            addCriterion("quittime <>", value, "quittime");
            return (Criteria) this;
        }

        public Criteria andQuittimeGreaterThan(Date value) {
            addCriterion("quittime >", value, "quittime");
            return (Criteria) this;
        }

        public Criteria andQuittimeGreaterThanOrEqualTo(Date value) {
            addCriterion("quittime >=", value, "quittime");
            return (Criteria) this;
        }

        public Criteria andQuittimeLessThan(Date value) {
            addCriterion("quittime <", value, "quittime");
            return (Criteria) this;
        }

        public Criteria andQuittimeLessThanOrEqualTo(Date value) {
            addCriterion("quittime <=", value, "quittime");
            return (Criteria) this;
        }

        public Criteria andQuittimeIn(List<Date> values) {
            addCriterion("quittime in", values, "quittime");
            return (Criteria) this;
        }

        public Criteria andQuittimeNotIn(List<Date> values) {
            addCriterion("quittime not in", values, "quittime");
            return (Criteria) this;
        }

        public Criteria andQuittimeBetween(Date value1, Date value2) {
            addCriterion("quittime between", value1, value2, "quittime");
            return (Criteria) this;
        }

        public Criteria andQuittimeNotBetween(Date value1, Date value2) {
            addCriterion("quittime not between", value1, value2, "quittime");
            return (Criteria) this;
        }

        public Criteria andEntryteamIsNull() {
            addCriterion("Entryteam is null");
            return (Criteria) this;
        }

        public Criteria andEntryteamIsNotNull() {
            addCriterion("Entryteam is not null");
            return (Criteria) this;
        }

        public Criteria andEntryteamEqualTo(Date value) {
            addCriterion("Entryteam =", value, "entryteam");
            return (Criteria) this;
        }

        public Criteria andEntryteamNotEqualTo(Date value) {
            addCriterion("Entryteam <>", value, "entryteam");
            return (Criteria) this;
        }

        public Criteria andEntryteamGreaterThan(Date value) {
            addCriterion("Entryteam >", value, "entryteam");
            return (Criteria) this;
        }

        public Criteria andEntryteamGreaterThanOrEqualTo(Date value) {
            addCriterion("Entryteam >=", value, "entryteam");
            return (Criteria) this;
        }

        public Criteria andEntryteamLessThan(Date value) {
            addCriterion("Entryteam <", value, "entryteam");
            return (Criteria) this;
        }

        public Criteria andEntryteamLessThanOrEqualTo(Date value) {
            addCriterion("Entryteam <=", value, "entryteam");
            return (Criteria) this;
        }

        public Criteria andEntryteamIn(List<Date> values) {
            addCriterion("Entryteam in", values, "entryteam");
            return (Criteria) this;
        }

        public Criteria andEntryteamNotIn(List<Date> values) {
            addCriterion("Entryteam not in", values, "entryteam");
            return (Criteria) this;
        }

        public Criteria andEntryteamBetween(Date value1, Date value2) {
            addCriterion("Entryteam between", value1, value2, "entryteam");
            return (Criteria) this;
        }

        public Criteria andEntryteamNotBetween(Date value1, Date value2) {
            addCriterion("Entryteam not between", value1, value2, "entryteam");
            return (Criteria) this;
        }

        public Criteria andMaketimeIsNull() {
            addCriterion("MakeTime is null");
            return (Criteria) this;
        }

        public Criteria andMaketimeIsNotNull() {
            addCriterion("MakeTime is not null");
            return (Criteria) this;
        }

        public Criteria andMaketimeEqualTo(Date value) {
            addCriterion("MakeTime =", value, "maketime");
            return (Criteria) this;
        }

        public Criteria andMaketimeNotEqualTo(Date value) {
            addCriterion("MakeTime <>", value, "maketime");
            return (Criteria) this;
        }

        public Criteria andMaketimeGreaterThan(Date value) {
            addCriterion("MakeTime >", value, "maketime");
            return (Criteria) this;
        }

        public Criteria andMaketimeGreaterThanOrEqualTo(Date value) {
            addCriterion("MakeTime >=", value, "maketime");
            return (Criteria) this;
        }

        public Criteria andMaketimeLessThan(Date value) {
            addCriterion("MakeTime <", value, "maketime");
            return (Criteria) this;
        }

        public Criteria andMaketimeLessThanOrEqualTo(Date value) {
            addCriterion("MakeTime <=", value, "maketime");
            return (Criteria) this;
        }

        public Criteria andMaketimeIn(List<Date> values) {
            addCriterion("MakeTime in", values, "maketime");
            return (Criteria) this;
        }

        public Criteria andMaketimeNotIn(List<Date> values) {
            addCriterion("MakeTime not in", values, "maketime");
            return (Criteria) this;
        }

        public Criteria andMaketimeBetween(Date value1, Date value2) {
            addCriterion("MakeTime between", value1, value2, "maketime");
            return (Criteria) this;
        }

        public Criteria andMaketimeNotBetween(Date value1, Date value2) {
            addCriterion("MakeTime not between", value1, value2, "maketime");
            return (Criteria) this;
        }

        public Criteria andModifytimeIsNull() {
            addCriterion("ModifyTime is null");
            return (Criteria) this;
        }

        public Criteria andModifytimeIsNotNull() {
            addCriterion("ModifyTime is not null");
            return (Criteria) this;
        }

        public Criteria andModifytimeEqualTo(Date value) {
            addCriterion("ModifyTime =", value, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeNotEqualTo(Date value) {
            addCriterion("ModifyTime <>", value, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeGreaterThan(Date value) {
            addCriterion("ModifyTime >", value, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeGreaterThanOrEqualTo(Date value) {
            addCriterion("ModifyTime >=", value, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeLessThan(Date value) {
            addCriterion("ModifyTime <", value, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeLessThanOrEqualTo(Date value) {
            addCriterion("ModifyTime <=", value, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeIn(List<Date> values) {
            addCriterion("ModifyTime in", values, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeNotIn(List<Date> values) {
            addCriterion("ModifyTime not in", values, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeBetween(Date value1, Date value2) {
            addCriterion("ModifyTime between", value1, value2, "modifytime");
            return (Criteria) this;
        }

        public Criteria andModifytimeNotBetween(Date value1, Date value2) {
            addCriterion("ModifyTime not between", value1, value2, "modifytime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jbplayer
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 27 21:34:56 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jbplayer
     *
     * @mbggenerated Wed Nov 27 21:34:56 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}